<style>
    .card {
        background-color: var(--form-bg);
        border-color: var(--border-color);
    }

    .card-body {
        color: var(--text-color);
    }

    .table {
        color: var(--text-color);
    }

    .table thead th {
        background-color: var(--table-header-bg);
        border-color: var(--border-color);
    }

    .table td {
        border-color: var(--border-color);
    }

    .table tbody tr:hover {
        background-color: var(--hover-bg);
    }

    .text-muted {
        color: var(--secondary-color) !important;
    }

    .form-control {
        background-color: var(--bg-color);
        border-color: var(--border-color);
        color: var(--text-color);
    }

    .form-control:focus {
        background-color: var(--bg-color);
        border-color: var(--primary-color);
        color: var(--text-color);
        box-shadow: 0 0 0 0.25rem rgba(var(--primary-color-rgb), 0.25);
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }

    .btn-success {
        background-color: #198754;
        border-color: #198754;
        color: white;
    }

    .alert-info {
        background-color: var(--form-bg);
        border-color: var(--border-color);
        color: var(--text-color);
    }

    .alert-info a {
        color: var(--primary-color);
        text-decoration: none;
    }

    .alert-info a:hover {
        text-decoration: underline;
    }
</style>

<div class="container">
    <h2 class="mb-4">Mi Carrito</h2>

    {{#if products.length}}
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Producto</th>
                                <th>Precio</th>
                                <th>Cantidad</th>
                                <th>Subtotal</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each products}}
                                <tr>
                                    <td>
                                        <h5>{{this.title}}</h5>
                                        <p class="text-muted">{{this.description}}</p>
                                    </td>
                                    <td>{{formatPrice this.price}}</td>
                                    <td>
                                        <input type="number" 
                                               class="form-control quantity-input" 
                                               value="{{this.quantity}}"
                                               min="1"
                                               max="{{this.stock}}"
                                               data-product-id="{{this.id}}">
                                    </td>
                                    <td>{{formatPrice (multiply this.price this.quantity)}}</td>
                                    <td>
                                        <button class="btn btn-danger btn-sm remove-product"
                                                data-product-id="{{this.id}}">
                                            Eliminar
                                        </button>
                                    </td>
                                </tr>
                            {{/each}}
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                <td colspan="2">
                                    <strong>
                                        {{formatPrice (reduce products (lambda 'acc' 'item' '(add acc (multiply item.price item.quantity))') 0)}}
                                    </strong>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="d-flex justify-content-between mt-3">
                    <button class="btn btn-danger" id="clearCart">Vaciar Carrito</button>
                    <button class="btn btn-success" id="checkout">Finalizar Compra</button>
                </div>
            </div>
        </div>
    {{else}}
        <div class="alert alert-info">
            Tu carrito está vacío. <a href="/products">Ver productos</a>
        </div>
    {{/if}}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const cartId = '{{cart._id}}';

    // Actualizar cantidad
    const quantityInputs = document.querySelectorAll('.quantity-input');
    quantityInputs.forEach(input => {
        input.addEventListener('change', async function() {
            const productId = this.dataset.productId;
            const quantity = parseInt(this.value);
            
            try {
                const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity })
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    throw new Error('Error al actualizar cantidad');
                }
            } catch (error) {
                alert('Error al actualizar la cantidad');
                console.error('Error:', error);
            }
        });
    });

    // Eliminar producto
    const removeButtons = document.querySelectorAll('.remove-product');
    removeButtons.forEach(button => {
        button.addEventListener('click', async function() {
            const productId = this.dataset.productId;
            
            try {
                const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    throw new Error('Error al eliminar producto');
                }
            } catch (error) {
                alert('Error al eliminar el producto');
                console.error('Error:', error);
            }
        });
    });

    // Vaciar carrito
    const clearCartButton = document.getElementById('clearCart');
    if (clearCartButton) {
        clearCartButton.addEventListener('click', async function() {
            if (confirm('¿Estás seguro de que quieres vaciar el carrito?')) {
                try {
                    const response = await fetch(`/api/carts/${cartId}`, {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        throw new Error('Error al vaciar carrito');
                    }
                } catch (error) {
                    alert('Error al vaciar el carrito');
                    console.error('Error:', error);
                }
            }
        });
    }

    // Finalizar compra
    const checkoutButton = document.getElementById('checkout');
    if (checkoutButton) {
        checkoutButton.addEventListener('click', async function() {
            alert('Funcionalidad de checkout en desarrollo');
        });
    }
});
</script>
